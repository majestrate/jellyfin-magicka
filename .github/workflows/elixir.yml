

name: Jellyfin Magicka CI

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  setup:
    name: setup env
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    
    - name: Restore Cached ASDF
      uses: actions/cache/restore@v3
      id: cache-asdf
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-${{ hashFiles('.tool-versions') }}
    - name: Install ASDF
      if: steps.cache-asdf.outputs.cache-hit != 'true'
      uses: asdf-vm/actions/install@v2
    - name: Store Cached ASDF 
      if: steps.cache-asdf.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: ~/.asdf
        key: ${{ runner.os }}-${{ hashFiles('.tool-versions') }}
    - name: Restore Cached Elixir Deps
      uses: actions/cache/restore@v3
      id: cache-elixir
      with:
        path: deps
        key: ${{ runner.os }}-${{ hashFiles('mix.lock') }}
    - name: mix deps.get
      if: steps.cache-elixir.outputs.cache-hit != 'true'
      run: mix deps.get
    - name: Store Cached Elixir Deps
      if: steps.cache-elixir.outputs.cache-hit != 'true'
      uses: actions/cache/save@v3
      with:
        path: deps
        key: ${{ runner.os }}-${{ hashFiles('mix.lock') }}

  build:
    name: build
    runs-on: ubuntu-22.04
    needs: setup
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: ASDF (restore cached)
        uses: actions/cache/restore@v3
        id: cache-asdf
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-${{ hashFiles('.tool-versions') }}
      - name: Mix (restore cached)
        uses: actions/cache/restore@v3
        id: cache-elixir
        with:
          path: deps
          key: ${{ runner.os }}-${{ hashFiles('mix.lock') }}
      - name: ASDF (ensure cached)
        uses: asdf-vm/actions/install@v2
      - name: Mix (ensure cached)
        run: mix deps.get
      - name: mix compile
        run: mix compile